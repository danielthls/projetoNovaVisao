unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, System.Net.Mime, System.Net.HttpClient, System.JSON;

type


  TForm1 = class(TForm)
    Memo1: TMemo;
    Button1: TButton;
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
    //function StringStreamParaJSON: TJSONObject;
    function getData2(JsonString: String; User: String; Field: String): String;
    procedure Test1;
  public
    { Public declarations }
  end;




  var
  Form1: TForm1;

implementation

{$R *.dfm}



procedure TForm1.Button1Click(Sender: TObject);
begin
  //StringStreamParaJSON;
end;

{function TForm1.StringStreamParaJSON: TJSONObject;
var
  xStringStream: TStringStream;
  xValorJson, xValorData, xURLData: TJSONValue;
  xArrayData: TJSONArray;
  I: Integer;
  xListaURL: TStringList;
begin}
  //xStringStream := TStringStream.Create('{"created": 1677849474,"data": [ {      "url": "https://www.sitetest1.com"    },    {      "url": "https://www.palhacinhos.com"    }  ]}');

  {xValorJson := TJSONObject.ParseJSONValue(xStringStream.DataString);
  try
    xValorData := xValorJson.GetValue<TJsonArray>('data');
    if xValorData is TJSONArray then
    begin
      xArrayData := TJSONArray(xValorData);

      xListaURL := TStringList.Create;

      try
        for I := 0 to pred(xArrayData.Count) do
        begin
          xURLData := xArrayData[I].GetValue<TJsonValue>('url');
          xListaURL.Add(xURLData.ToString);
        end;

        for I := 0 to pred(xListaURL.Count) do
        begin
        // Now UrlList contains the URL values
        memo1.lines.add(xListaURL[I]);

        end;
      finally
        //freeAndNil(xListaUrl);
        freeAndNil(xURLData);
        freeAndNil(xValorData);
        freeAndNil(xArrayData);

      end;
    end;
  finally

    freeAndNil(xListaUrl);
    freeAndNil(xStringStream);
    freeAndNil(xValorJson);

  end;
end;}

function TForm1.getData2(JsonString, User, Field: String): String;
var
  xJSonValue, xDataValue: TJSonValue;
  xJsonArray: TJSONArray;
  xArrayElement: TJSonValue;
  xFoundValue: TJSonValue;
begin
  Result :='';

  // create TJSonObject from string
  xJSonValue := TJSonObject.ParseJSONValue(JsonString);

  // get the array
  xJsonArray := xJSonValue as TJSONArray;

  // iterate the array
  for xArrayElement in xJsonArray do begin
      xFoundValue := xArrayElement.FindValue(User);
      if xFoundValue <> nil then begin
        Result := xArrayElement.GetValue<string>(User + '.' + Field);
        break;
      end;
  end;
end;

procedure TForm1.Test1;
begin

end;

end.
